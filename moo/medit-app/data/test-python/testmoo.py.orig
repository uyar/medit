from munit import *
import moo

# def close_window(win):
#     for doc in win.get_docs():
#         doc.set_modified(False)
#     return win.close()

editor = moo.Editor.instance()
tassert(editor is not None)
tassert(isinstance(editor, moo.Editor))

# while len(editor.get_windows()) > 1:
#     win = editor.get_windows()[0]
#     if not close_window(win):
#         tassert(False)
#         break
# if len(editor.get_windows()) == 1:
#     while len(editor.get_docs()) > 1:
#         doc = editor.get_docs()[0]
#         doc.set_modified(False)
#         if not doc.close():
#             tassert(False)
#             break

window = editor.get_active_window()
tassert(window is not None)
tassert(isinstance(window, moo.EditWindow))
doc = window.get_active_doc()
tassert(doc is not None)
tassert(isinstance(doc, moo.Edit))
tassert(doc == editor.get_active_doc())
tassert(doc.get_window() == window)
view = doc.get_view()
tassert(view is not None)
tassert(isinstance(view, moo.EditView))
tassert(isinstance(view, moo.TextView))
tassert(view is window.get_active_view())
tassert(view is editor.get_active_view())
